package require tcltest

::tcltest::configure {*}$argv

::tcltest::testConstraint mute 0

::tcltest::loadTestedCommands

file copy -force [file join [::tcltest::configure -testdir] eval.csv] [::tcltest::configure -tmpdir]
file copy -force [file join [::tcltest::configure -testdir] eval2.csv] [::tcltest::configure -tmpdir]

set STARKITS H:/starkits
set SANDBOX H:/code
if {![file exists $STARKITS]} {
    set STARKITS [file normalize [file join ~ starkits]]
    set SANDBOX [file normalize [file join ~ code]]
}
set EXEC [list ::exec tclsh [file join $STARKITS csvops.kit]]
set FOO_CO [file join [::tcltest::configure -tmpdir] foo.co]

::tcltest::test system-1.0 {Changed running without filename from error to just open console.} -constraints {mute} -setup {
} -body {
    {*}$EXEC
} -cleanup {
} -result {}


::tcltest::test system-1.1 {} -setup {
} -body {
    {*}$EXEC foo:bar
} -cleanup {
} -result {Skriptet kunde inte laddas: Cannot read file "foo:bar", does not exist} -returnCodes error


::tcltest::test system-1.2 {} -setup {
    ::tcltest::makeFile {expr {1/0}} foo.co
} -body {
    {*}$EXEC $FOO_CO
} -cleanup {
} -result {Bearbetningen misslyckades: divide by zero} -returnCodes error


::tcltest::test system-1.3 {} -setup {
    ::tcltest::makeFile {puts "I'm foo"} foo.co
} -body {
    {*}$EXEC $FOO_CO
} -cleanup {
} -result {I'm foo}


::tcltest::test system-2.0 {options: defaults} -setup {
    ::tcltest::makeFile {
        ::fileutil::writeFile foo.out [lmap opt [lsort [array names ::options]] {
            list $opt $::options($opt)
        }]
    } foo.co
    ::tcltest::makeFile {} foo.out
    log::lvSuppressLE i 0
} -body {
    {*}$EXEC $FOO_CO
    ::tcltest::viewFile foo.out
} -cleanup {
    log::lvSuppressLE i 1
} -result {{-alternate 0} {-convert-decimal {read write}} {-delimiter {"}} {-oseparator {;}} {-safe 1} {-separator {;}}}

# "

::tcltest::test system-2.1 {options: abbreviated} -setup {
    ::tcltest::makeFile {
        ::fileutil::writeFile foo.out [lmap opt [lsort [array names ::options]] {
            list $opt $::options($opt)
        }]
    } foo.co
    ::tcltest::makeFile {} foo.out
} -body {
    {*}$EXEC -a -c read -d ' -se , -os : -sa $FOO_CO
    ::tcltest::viewFile foo.out
} -cleanup {
} -result {{-alternate 1} {-convert-decimal read} {-delimiter '} {-oseparator :} {-safe 1} {-separator ,}}


::tcltest::test system-3.0 {copy database} -setup {
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval.csv
        s dumpTable -values t1 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -no-safe -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
    log::lvSuppressLE i 1
} -result {023,EVAL cmd eval in list obj var,26,45,57.78
024,EVAL cmd eval as list,23,42,54.76
025,EVAL cmd eval as string,53,92,57.61
026,EVAL cmd and mixed lists,3805,11276,33.74
027,EVAL list cmd and mixed lists,3812,11325,33.66
028,EVAL list cmd and pure lists,592,1598,37.05}


::tcltest::test system-3.1 {copy two columns from database} -setup {
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval.csv
        s create t2 a b
        s eval {INSERT INTO t2 SELECT a, b FROM t1}
        s dumpTable -values t2 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
} -result {023,EVAL cmd eval in list obj var
024,EVAL cmd eval as list
025,EVAL cmd eval as string
026,EVAL cmd and mixed lists
027,EVAL list cmd and mixed lists
028,EVAL list cmd and pure lists}


::tcltest::test system-3.2 {copy two rows from database} -setup {
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval.csv
        s create t2 a b c d e
        s eval {INSERT INTO t2 SELECT * FROM t1 LIMIT 4,2}
        s dumpTable -values t2 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
} -result {027,EVAL list cmd and mixed lists,3812,11325,33.66
028,EVAL list cmd and pure lists,592,1598,37.05}


::tcltest::test system-4.0 {fields: change the value of a field} -setup {
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval2.csv
        s create t2 nr msg a
        s eval {INSERT INTO t2 SELECT a, b, c * 2 FROM t1}
        s dumpTable -values t2 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
} -result {023,EVAL cmd eval in list obj var,52
024,EVAL cmd eval as list,46
025,EVAL cmd eval as string,106
026,EVAL cmd and mixed lists,7610
027,EVAL list cmd and mixed lists,7624
028,EVAL list cmd and pure lists,1184
026,EVAL cmd eval as string,106}


::tcltest::test system-4.1 {fields: add a field in output} -setup {
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval2.csv
        s create t2 nr msg a b
        s eval {INSERT INTO t2 SELECT a, b, c, c * 2 FROM t1}
        s dumpTable -values t2 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
} -result {023,EVAL cmd eval in list obj var,26,52
024,EVAL cmd eval as list,23,46
025,EVAL cmd eval as string,53,106
026,EVAL cmd and mixed lists,3805,7610
027,EVAL list cmd and mixed lists,3812,7624
028,EVAL list cmd and pure lists,592,1184
026,EVAL cmd eval as string,53,106}


::tcltest::test system-4.2 {fields: remove duplicate ids} -setup {
    log::lvSuppressLE i 0
    ::tcltest::makeFile {} foobar.csv
    ::tcltest::makeFile {
        DB create s
        s create t1 a b c d e
        s loadTable t1 eval2.csv
        set d [s dict -values {SELECT * FROM t1}]
        set nrs [s eval {SELECT DISTINCT a FROM t1}]
        s create t2 nr msg a
        foreach nr $nrs {
            s insert t2 [lmap item [lrange [lsearch -inline -index 0 $d $nr] 0 2] {format '%s' $item}]
        }
        s dumpTable -values t2 foobar.csv
    } foo.co
} -body {
    {*}$EXEC -sep , -convert-decimal read $FOO_CO
    ::tcltest::viewFile foobar.csv
} -cleanup {
    log::lvSuppressLE i 1
} -result {023,EVAL cmd eval in list obj var,26
024,EVAL cmd eval as list,23
025,EVAL cmd eval as string,53
026,EVAL cmd and mixed lists,3805
027,EVAL list cmd and mixed lists,3812
028,EVAL list cmd and pure lists,592}


file delete [file join [::tcltest::configure -tmpdir] eval.csv]
file delete [file join [::tcltest::configure -tmpdir] eval2.csv]


::tcltest::cleanupTests
